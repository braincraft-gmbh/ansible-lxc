---
# tasks file for bc.lxc

- name: Ensure LXC packages are installed.
  apt:
    name: "{{ item }}"
  with_items:
    - lxc
    - python-lxc
    - debootstrap
    - bridge-utils

- set_fact:
    lxc_backing_store: 'zfs'
  when: not(
          (zfs_root is undefined)
          or
          (zfs_root is none)
          or
          (zfs_root | trim == '')
        )

- name: Increase value of inotify.max_user_instances
  sysctl:
    name: fs.inotify.max_user_watches
    value: 524288
    sysctl_set: yes
    reload: yes

- name: Create LXC container
  lxc_container:
    name: "{{ container_name }}"
    template: debian
    template_options: --release stretch
    backing_store: "{{ lxc_backing_store | default('dir') }}"
    zfs_root: "{{ zfs_root }}"
  register: container_info

- name: Deploy container configuration from template
  template:
    src: container.conf.j2
    dest: "{{ lxc_root }}/{{ container_name }}/config"
  notify: restart container

- name: Print container info
  debug:
    var: container_info
    verbosity: 4

- name: Wait for the network to be setup in the containers
  when: container_info|changed
  pause: seconds=5

- name: Setup the container SSH
  lxc_container:
    name: "{{ container_name }}"
    container_command: apt-get update && apt-get install -y python-minimal openssh-server iputils-ping

- name: Create .ssh folder on container /root/
  file:
    dest: "{{ lxc_root }}/{{ container_name }}/rootfs/root/.ssh/"
    state: directory
    mode: 0700

- name: Set up authorized key from local ansible user on container
  authorized_key:
    user: "{{ ansible_user_id }}"
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
    path: "{{ lxc_root }}/{{ container_name }}/rootfs/root/.ssh/authorized_keys"
    state: present

- name: Add host to in-memory inventory
  add_host:
    name: "{{ container_info.lxc_container.name }}"
    ansible_host: "{{ ansible_host }}"
    ansible_port: 26
    groups: ["{{ location }}", "{{ type }}", "lxc"]
